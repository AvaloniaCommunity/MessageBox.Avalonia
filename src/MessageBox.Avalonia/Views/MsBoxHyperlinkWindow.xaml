<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="150" d:DesignHeight="100"
        x:Class="MessageBox.Avalonia.Views.MsBoxHyperlinkWindow"
        SizeToContent="WidthAndHeight"
        MinWidth="200"
        MaxWidth="{Binding  MaxWidth}"
        WindowStartupLocation="{Binding LocationOfMyWindow}"
        MinHeight="100"
        CanResize="{Binding CanResize}"
        HasSystemDecorations="{Binding HasSystemDecorations}"
        Topmost="{Binding Topmost}"
        FontFamily="{Binding FontFamily}"
        Title="{Binding ContentTitle}"
        xmlns:c="clr-namespace:MessageBox.Avalonia.Controls;assembly=MessageBox.Avalonia"
        xmlns:viewModels="clr-namespace:MessageBox.Avalonia.ViewModels">
    <Design.DataContext>
        <viewModels:MsBoxHyperlinkViewModel />
    </Design.DataContext>
    <Window.Styles>
        <StyleInclude Source="/Styles/HyperlinkStyle.axaml" />
    </Window.Styles>
    <Window.KeyBindings>
        <KeyBinding Gesture="Ctrl+C" Command="{Binding Copy}" />
    </Window.KeyBindings>

    <Window.Styles>
        <Style Selector="TextBox">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        </Style>
        <Style Selector="TextBox:focus /template/ Border#border">
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style Selector="TextBox.header">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style Selector="Button">
            <Setter Property="Margin" Value="15 0 0 0" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="MinWidth" Value="75" />
        </Style>

    </Window.Styles>
    <Grid Classes="MsBoxHyperlinkContainer" RowDefinitions="15,*,15,Auto,15" ColumnDefinitions="15,Auto,15,*,15">
        <!--Icon-->
        <Image Classes="image" Grid.Row="1" Grid.Column="1" MaxHeight="50" MaxWidth="50" VerticalAlignment="Top"
               IsVisible="{Binding Icon}"
               Source="{Binding ImagePath}" />
        <Grid Grid.Row="1" Grid.Column="3" RowDefinitions="Auto,15,*">
            <!--Bold text-->
            <TextBox Grid.Row="0" Classes="header" FontFamily="{Binding FontFamily}" Text="{Binding ContentHeader}"
                     IsVisible="{Binding HasHeader}" />
            <!--Content text-->
            <ItemsControl x:Name="myItems" Items="{Binding HyperlinkContentProvider}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <c:Hyperlink Text="{Binding Alias}" Url="{Binding Url}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>
        </Grid>
        <!--Buttons-->
        <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3"
                    HorizontalAlignment="Right">
            <Button Content="Ok" Tag="Colored" Command="{Binding ButtonClick}"
                    CommandParameter="{Binding $self.Content}" IsVisible="{Binding IsOkShowed}" />
            <Button Content="Yes" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsYesShowed}" />
            <Button Content="No" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsNoShowed}" />
            <Button Content="Abort" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsAbortShowed}" />
            <Button Content="Cancel" Command="{Binding ButtonClick}" CommandParameter="{Binding $self.Content}"
                    IsVisible="{Binding IsCancelShowed}" />
        </StackPanel>
    </Grid>
</Window>