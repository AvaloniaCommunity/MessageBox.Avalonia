<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
             xmlns:viewModels="clr-namespace:MsBox.Avalonia.ViewModels"
             xmlns:attachadProperty="clr-namespace:MsBox.Avalonia.AttachadProperty"
             xmlns:converters="clr-namespace:MsBox.Avalonia.Converters"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             d:DataContext="{x:Static viewModels:DesignDataContexts.CustomHyperlinkInputViewModel}"
             x:Class="MsBox.Avalonia.Controls.MsBoxCustomView" MinWidth="{Binding MinWidth}"
             x:DataType="viewModels:MsBoxCustomViewModel"
             MaxWidth="{Binding MaxWidth}"
             Width="{Binding Width}"
             MinHeight="{Binding MinHeight}"
             MaxHeight="{Binding MaxHeight}"
             Height="{Binding Height}"
             FontFamily="{Binding FontFamily}">
    <UserControl.Resources>
        <converters:ConditionalGridLengthStarConverter x:Key="conditionalGridLengthStarConverter" />
    </UserControl.Resources>
    <UserControl.KeyBindings>
        <KeyBinding Gesture="Ctrl+C" Command="{Binding Copy}" />
    </UserControl.KeyBindings>
    <UserControl.Styles>
        <Style Selector="TextBox.styled">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="CaretBrush" Value="Transparent" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        </Style>
        <Style Selector="TextBox.styled:pointerover /template/ Border#border">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.styled:pointerover /template/ Border#PART_BorderElement">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.styled:focus /template/ Border#border">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.styled:focus /template/ Border#PART_BorderElement">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.header">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style Selector="Button">
            <Setter Property="Margin" Value="15 0 0 0" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="MinWidth" Value="75" />
        </Style>
        <Style Selector="TextBlock.hyperlink">
            <Setter Property="Foreground" Value="#3483eb" />
        </Style>
        <Style Selector="TextBlock.hyperlink:pointerover">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="TextDecorations" Value="Underline" />
            <Setter Property="Foreground" Value="#3496eb" />
        </Style>
    </UserControl.Styles>
    <Grid Classes="MsBoxCustomContainer">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="15" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="15" />
            <RowDefinition Height="{Binding Path=!IsInputMultiline, Converter={StaticResource conditionalGridLengthStarConverter}}" />
            <RowDefinition Height="15" />
            <RowDefinition Height="{Binding Path=IsInputMultiline, Converter={StaticResource conditionalGridLengthStarConverter}}" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="15" />
        </Grid.RowDefinitions>
        <!--Icon-->
        <Image Grid.Row="1" Grid.Column="1" MaxHeight="50" MaxWidth="50" VerticalAlignment="Top"
               IsVisible="{Binding HasIcon}"
               Source="{Binding ImagePath}" />
        <Grid Grid.Row="1" Grid.Column="3" RowDefinitions="Auto,15,*,Auto">
            <!--Bold text-->
            <TextBox Grid.Row="0" Classes="header styled" FontFamily="{Binding FontFamily}" Text="{Binding ContentHeader}"
                     IsVisible="{Binding HasHeader}" />
            <!--Content text-->
            <TextBox Grid.Row="2" Name="ContentTextBox" Classes="contentMessage styled" FontFamily="{Binding FontFamily}"
                     Text="{Binding ContentMessage}" IsVisible="{Binding !Markdown}" />
            <avalonia:MarkdownScrollViewer Grid.Row="2"
                                           Markdown="{Binding ContentMessage}"
                                           IsVisible="{Binding Markdown}" />

            <!--HyperLink-->
            <TextBlock Grid.Row="3" IsVisible="{Binding IsHyperLinkVisible }" Name="HyperLink" Classes="hyperlink"
                       Text="{Binding HyperLinkText}"
                       attachadProperty:HyperLinkCommand.Command="{Binding HyperLinkCommand}">
            </TextBlock>

        </Grid>
        <!--Input-->
        <Grid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" IsVisible="{Binding IsInputVisible}" Margin="0,0,0,15">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <TextBlock FontFamily="{Binding FontFamily}" IsVisible="{Binding IsInputVisible}" Text="{Binding InputLabel}" VerticalAlignment="Center" Margin="0,0,15,0" />
          <TextBox Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding InputValue, Mode=TwoWay}" FontFamily="{Binding FontFamily}" IsVisible="{Binding IsInputVisible}"
                   AcceptsReturn="{Binding IsInputMultiline}" />
        </Grid>
        <!--Buttons-->
        <ItemsControl Name="ButtonItemsPresenter" Classes="buttons-item-presenter"
                      ItemsSource="{Binding ButtonDefinitions}" Grid.Row="4"
                      Grid.Column="1" Grid.ColumnSpan="3"
                      HorizontalAlignment="Right">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Name="Btn"
                            HorizontalContentAlignment="Center"
                            Classes.buttons="true"
                            Classes.default="{Binding IsDefault}"
                            Classes.cancel="{Binding IsCancel}"
                            Command="{Binding ((viewModels:MsBoxCustomViewModel)DataContext).ButtonClickCommand, RelativeSource={RelativeSource AncestorType=UserControl, AncestorLevel=1}}"
                            CommandParameter="{Binding #Btn.Content}"
                            Content="{Binding Name}"
                            Margin="0 0 5 0"
                            IsDefault="{Binding IsDefault}"
                            IsCancel="{Binding IsCancel}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>